module RAM(
    input clk, write_enable,
    input [1:0] addr,
    input [3:0] data_in,
    output reg [3:0] data_out
);
    reg [3:0] memory [3:0];

    always @(posedge clk) begin
        if (write_enable)
            memory[addr] <= data_in;
        else
            data_out <= memory[addr];
    end
endmodule
 
TEST BENCH

module tb_RAM;
    reg clk, write_enable;
    reg [1:0] addr;
    reg [3:0] data_in;
    wire [3:0] data_out;

    RAM uut (.clk(clk), .write_enable(write_enable), .addr(addr), .data_in(data_in), .data_out(data_out));

    initial begin
        clk = 0; forever #5 clk = ~clk;
    end

    initial begin
        $monitor("Addr=%b WriteEnable=%b DataIn=%b | DataOut=%b", addr, write_enable, data_in, data_out);
        write_enable = 1; addr = 2'b00; data_in = 4'b1010; #10;
        write_enable = 0; addr = 2'b00; #10;
        $finish;
    end
endmodule
